% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{ForestModel}
\alias{ForestModel}
\title{Class that defines and samples a forest model}
\description{
Hosts the C++ data structures needed to sample an ensemble of decision
trees, and exposes functionality to run a forest sampler
(using either MCMC or the grow-from-root algorithm).
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{tracker_ptr}}{External pointer to a C++ ForestTracker class}

\item{\code{tree_prior_ptr}}{External pointer to a C++ TreePrior class}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ForestModel-new}{\code{ForestModel$new()}}
\item \href{#method-ForestModel-sample_one_iteration}{\code{ForestModel$sample_one_iteration()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ForestModel-new"></a>}}
\if{latex}{\out{\hypertarget{method-ForestModel-new}{}}}
\subsection{Method \code{new()}}{
Create a new ForestModel object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ForestModel$new(
  forest_dataset,
  feature_types,
  num_trees,
  n,
  alpha,
  beta,
  min_samples_leaf,
  max_depth = -1
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{forest_dataset}}{\code{ForestDataset} object, used to initialize forest sampling data structures}

\item{\code{feature_types}}{Feature types (integers where 0 = numeric, 1 = ordered categorical, 2 = unordered categorical)}

\item{\code{num_trees}}{Number of trees in the forest being sampled}

\item{\code{n}}{Number of observations in \code{forest_dataset}}

\item{\code{alpha}}{Root node split probability in tree prior}

\item{\code{beta}}{Depth prior penalty in tree prior}

\item{\code{min_samples_leaf}}{Minimum number of samples in a tree leaf}

\item{\code{max_depth}}{Maximum depth of any tree in an ensemble. Default: \code{-1}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{ForestModel} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ForestModel-sample_one_iteration"></a>}}
\if{latex}{\out{\hypertarget{method-ForestModel-sample_one_iteration}{}}}
\subsection{Method \code{sample_one_iteration()}}{
Run a single iteration of the forest sampling algorithm (MCMC or GFR)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ForestModel$sample_one_iteration(
  forest_dataset,
  residual,
  forest_samples,
  rng,
  feature_types,
  leaf_model_int,
  leaf_model_scale,
  variable_weights,
  global_scale,
  cutpoint_grid_size = 500,
  gfr = T,
  pre_initialized = F
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{forest_dataset}}{Dataset used to sample the forest}

\item{\code{residual}}{Outcome used to sample the forest}

\item{\code{forest_samples}}{Container of forest samples}

\item{\code{rng}}{Wrapper around C++ random number generator}

\item{\code{feature_types}}{Vector specifying the type of all p covariates in \code{forest_dataset} (0 = numeric, 1 = ordered categorical, 2 = unordered categorical)}

\item{\code{leaf_model_int}}{Integer specifying the leaf model type (0 = constant leaf, 1 = univariate leaf regression, 2 = multivariate leaf regression)}

\item{\code{leaf_model_scale}}{Scale parameter used in the leaf node model (should be a q x q matrix where q is the dimensionality of the basis and is only >1 when \code{leaf_model_int = 2})}

\item{\code{variable_weights}}{Vector specifying sampling probability for all p covariates in \code{forest_dataset}}

\item{\code{global_scale}}{Global variance parameter}

\item{\code{cutpoint_grid_size}}{(Optional) Number of unique cutpoints to consider (default: 500, currently only used when \code{GFR = TRUE})}

\item{\code{gfr}}{(Optional) Whether or not the forest should be sampled using the "grow-from-root" (GFR) algorithm}

\item{\code{pre_initialized}}{(Optional) Whether or not the leaves are pre-initialized outside of the sampling loop (before any samples are drawn). In multi-forest implementations like BCF, this is true, though in the single-forest supervised learning implementation, we can let C++ do the initialization. Default: F.}
}
\if{html}{\out{</div>}}
}
}
}
